---
- name: Change hostname in victim VM
  hosts: victim
  become: true
  tasks:
    - name: Change hostname
      ansible.builtin.command:
        cmd: hostnamectl set-hostname victim

- name: Change hostname in protected VM
  hosts: protected
  become: true
  tasks:
    - name: Change hostname
      ansible.builtin.command:
        cmd: hostnamectl set-hostname protected
        
- name: Change hostname in attacker VM
  hosts: attacker
  become: true
  tasks:
    - name: Change hostname
      ansible.builtin.command:
        cmd: hostnamectl set-hostname attacker

- name: Change hostname in wazuh VM
  hosts: wazuh
  become: true
  tasks:
    - name: Change hostname
      ansible.builtin.command:
        cmd: hostnamectl set-hostname wazuh


- name: Send attack files to the attacker VM and install Flask
  hosts: attacker
  become: true
  vars_files:
    - ansible_vars.yaml

  tasks:
    - name: Copy c2_server.py
      ansible.builtin.copy:
        src: ./src/c2_server.py
        dest: /home/ubuntu/
        mode: '0644'
        owner: ubuntu
        group: ubuntu
      

    - name: Create directory for app files
      ansible.builtin.file:
        path: /home/ubuntu/app
        state: directory
        mode: '0755'

    - name: Create directory for uploads
      ansible.builtin.file:
        path: /home/ubuntu/uploads
        state: directory
        mode: '0755'

    - name: Copy Stealer Client
      ansible.builtin.copy:
        src: ./src/gnome-updater.py
        dest: /home/ubuntu/app/
        mode: '0644'
        owner: ubuntu
        group: ubuntu

    - name: Change the C2 IP in gnome-updater.py
      ansible.builtin.replace:
        path: /home/ubuntu/app/gnome-updater.py
        regexp: 'HOST = "\{C2_IP\}"'
        replace: 'HOST = "{{ c2_ip }}"'

    - name: Change the C2 IP in c2_server.py
      ansible.builtin.replace:
        path: /home/ubuntu/c2_server.py
        regexp: 'C2_IP = "\{C2_IP\}"'
        replace: 'C2_IP = "{{ c2_ip }}"'

    - name: Install Flask
      ansible.builtin.shell:
        cmd: sudo apt install -y python3-flask

- name: Generate simulated sensible data on the victims VMs
  hosts: victim, protected
  become: true
  tasks:
    - name: Copy the script to the vm
      copy:
        src: ./seed_sensitive_files.sh
        dest: /tmp/seed_sensitive_files.sh
        mode: '0755'

    - name: Ensure seed_sensitive_files.sh is executable
      ansible.builtin.file:
        path: /tmp/seed_sensitive_files.sh
        mode: '0755'

    - name: Run the script to generate sensitive data
      ansible.builtin.shell: ./seed_sensitive_files.sh
      args:
        chdir: /tmp
    
    - name: Copy the clean script to the vm
      copy:
        src: ./src/clean-infostealer.sh
        dest: /tmp/clean-infostealer.sh
        mode: '0755'

- name: Install and configure Wazuh Manager on Wazuh VM
  hosts: wazuh
  become: true
  vars_files:
    - ansible_vars.yaml

  tasks:
    - name: Install prerequisites
      ansible.builtin.apt:
        name:
          - gnupg
          - apt-transport-https
        state: present
        update_cache: yes

    - name: Add Wazuh GPG key
      ansible.builtin.shell: |
        curl -s https://packages.wazuh.com/key/GPG-KEY-WAZUH | \
        gpg --no-default-keyring --keyring gnupg-ring:/usr/share/keyrings/wazuh.gpg --import
      args:
        creates: /usr/share/keyrings/wazuh.gpg

    - name: Set permissions for Wazuh GPG key
      ansible.builtin.file:
        path: /usr/share/keyrings/wazuh.gpg
        mode: '0644'

    - name: Add Wazuh repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/wazuh.gpg] https://packages.wazuh.com/4.x/apt/ stable main"
        filename: wazuh
        state: present

    - name: Install Wazuh Manager
      ansible.builtin.apt:
        name: wazuh-manager
        state: present
        update_cache: yes

    - name: Restart and enable Wazuh Manager
      ansible.builtin.service:
        name: wazuh-manager
        state: started
        enabled: true
    
    - name: Configure local rules for Wazuh Manager
      ansible.builtin.copy:
        src: ./confs/local_rules.xml
        dest: /var/ossec/etc/rules/local_rules.xml
        mode: '0644'

    - name: Copy trusted IPs list for zero trust
      ansible.builtin.copy:
        src: ./confs/trusted_ips.txt
        dest: /var/ossec/etc/lists/trusted_ips
        mode: '0644'

    - name: Copy blocked C2 IPs list
      ansible.builtin.copy:
        src: ./confs/blocked_c2_ips.txt
        dest: /var/ossec/etc/lists/blocked_c2_ips
        mode: '0644'

    - name: Copy optimized Wazuh Manager configuration
      ansible.builtin.copy:
        src: ./confs/wazuh-manager-conf.txt
        dest: /var/ossec/etc/ossec.conf
        mode: '0644'
        backup: yes

    - name: Restart Wazuh Manager to apply new rules and active response
      ansible.builtin.service:
        name: wazuh-manager
        state: restarted

- name: Install and configure Wazuh Agent on protected VM
  hosts: protected
  become: true
  vars_files:
    - ansible_vars.yaml

  tasks:
    - name: Install prerequisites
      ansible.builtin.apt:
        name:
          - gnupg
          - apt-transport-https
        state: present
        update_cache: yes

    - name: Add Wazuh GPG key
      ansible.builtin.shell: |
        curl -s https://packages.wazuh.com/key/GPG-KEY-WAZUH | \
        gpg --no-default-keyring --keyring gnupg-ring:/usr/share/keyrings/wazuh.gpg --import
      args:
        creates: /usr/share/keyrings/wazuh.gpg

    - name: Set permissions for Wazuh GPG key
      ansible.builtin.file:
        path: /usr/share/keyrings/wazuh.gpg
        mode: '0644'

    - name: Add Wazuh repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/wazuh.gpg] https://packages.wazuh.com/4.x/apt/ stable main"
        filename: wazuh
        state: present

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Wazuh Agent
      ansible.builtin.apt:
        name: wazuh-agent
        state: present

    - name: Install Audit in Protected VM
      ansible.builtin.apt:
        name: auditd
        state: present
        update_cache: yes

    - name: Start and enable auditd
      ansible.builtin.service:
        name: auditd
        state: started
        enabled: true
    
    - name: Configure auditd rules
      ansible.builtin.copy:
        src: ./confs/infostealer.rules
        dest: /etc/audit/rules.d/audit.rules
        mode: '0644'

    - name: Restart auditd to apply rules
      ansible.builtin.service:
        name: auditd
        state: restarted

    - name: Copy optimized Wazuh Agent configuration
      ansible.builtin.template:
        src: ./confs/wazuh-agent-conf.txt
        dest: /var/ossec/etc/ossec.conf
        mode: '0644'
        backup: yes

    - name: Install iptables-persistent
      ansible.builtin.apt:
        name: iptables-persistent
        state: present
        update_cache: yes

    - name: Save current iptables rules
      ansible.builtin.shell: iptables-save > /etc/iptables/rules.v4

    - name: Copy test script to protected VM
      ansible.builtin.copy:
        src: ./scripts/test-wazuh-detection.sh
        dest: /tmp/test-wazuh-detection.sh
        mode: '0755'
        owner: ubuntu
        group: ubuntu

    - name: Copy active response scripts to protected VM
      ansible.builtin.copy:
        src: ./active-response-scripts/
        dest: /var/ossec/active-response/bin/
        mode: '0755'
        directory_mode: '0755'

    - name: Ensure active response scripts are executable
      ansible.builtin.file:
        path: "/var/ossec/active-response/bin/{{ item }}"
        mode: '0755'
        owner: root
      loop:
        - kill-infostealer.sh
        - disable-systemd-service.sh
        - block-c2-connection.sh
        - quarantine-file.sh
      
    - name: Stop Wazuh Agent before registration
      ansible.builtin.service:
        name: wazuh-agent
        state: stopped

    - name: Register agent with manager using agent-auth
      ansible.builtin.shell: |
        /var/ossec/bin/agent-auth -m {{ wazuh_ip }} -A protected
      ignore_errors: yes

    - name: Start and enable Wazuh Agent
      ansible.builtin.service:
        name: wazuh-agent
        state: started
        enabled: true

    - name: Create ossec group
      ansible.builtin.group:
        name: ossec
        state: present